{"name": "test_bid_success[success_data1]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <cases.test_bid.TestBid object at 0x0000027E2DFA0508>\nsuccess_data = {'amount': '1000', 'expect': '投标成功！'}\nbid_web = (<selenium.webdriver.chrome.webdriver.WebDriver (session=\"2b9668be2f0669259ceb1ba731e2b36f\")>, <pages.login_page.LoginPage object at 0x0000027E2CFB9488>)\n\n    @pytest.mark.parametrize('success_data', bid_success_data)\n    def test_bid_success(self, success_data, bid_web):\n        \"\"\"投资成功的情况\"\"\"\n        driver, login_page = bid_web\n        home_page = HomePage(driver)\n        home_page.get()\n        home_page.click_bid_button()\n        bid_page = BidPage(driver)\n        # bid_page.bid_input.send_keys(success_data['amount'])\n        # bid_page.bid_confirm_button.click()\n        balance = bid_page.bid_success(success_data['amount'])\n        assert success_data['expect'] == bid_page.bid_popup_msg_element.text\n        # 验证余额\n        bid_page.click_bid_active_button()\n>       actual_balance = UserPage(driver).get_balance()\n\ncases\\test_bid.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\user_page.py:13: in get_balance\n    return self.balance_element.text.strip(\"元\")\npages\\user_page.py:10: in balance_element\n    return self.wait_visible_element(self.balance_locator)\npages\\base_page.py:30: in wait_visible_element\n    return WebDriverWait(self.driver, 60).until(ec.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"2b9668be2f0669259ceb1ba731e2b36f\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x0000027E2DF93108>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "description": "投资成功的情况", "parameters": [{"name": "success_data", "value": "{'amount': '1000', 'expect': '投标成功！'}"}], "start": 1568203069987, "stop": 1568203191125, "uuid": "7fb3f556-2785-4fe4-8c93-5f3a29be4839", "historyId": "41cd08c0c75d8eeb88a8198838736295", "testCaseId": "be8363ecc2134c38127a24d7c2b77e96", "fullName": "cases.test_bid.TestBid#test_bid_success", "labels": [{"name": "tag", "value": "bid"}, {"name": "parentSuite", "value": "cases"}, {"name": "suite", "value": "test_bid"}, {"name": "subSuite", "value": "TestBid"}, {"name": "host", "value": "zhzhuwang"}, {"name": "thread", "value": "18676-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "cases.test_bid"}]}